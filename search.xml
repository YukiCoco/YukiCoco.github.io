<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用 CloudFlare Warp 解锁坡县、港区的 Netflix</title>
      <link href="/2021/11/19/netflix/"/>
      <url>/2021/11/19/netflix/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="什么是-Netflix-锁区"><a href="#什么是-Netflix-锁区" class="headerlink" title="什么是 Netflix 锁区"></a>什么是 Netflix 锁区</h2><p>Netflix 为了版权方的利益，对视频内容进行了锁区，绝大部分的 IP 地址都被 Netflix 加入了黑名单。因此，一台 VPS 的 IP 是否能够解锁 Netflix 也成了一个重要指标。Netflix 的中文字幕仅在大多数华人居住地提供（港澳台新加坡马来西亚），但这些地方解锁本地流媒体的 VPS 普遍较贵。</p><h2 id="什么是-CloudFlare-Warp"><a href="#什么是-CloudFlare-Warp" class="headerlink" title="什么是 CloudFlare Warp"></a>什么是 CloudFlare Warp</h2><p>Warp 是 CloudFlare 提供的一项<strong>免费</strong> VPN 服务，它提供的 Linux 客户端可以过 WireGuard 连接。</p><h2 id="为什么需要反复刷新获取新的-Warp-IP"><a href="#为什么需要反复刷新获取新的-Warp-IP" class="headerlink" title="为什么需要反复刷新获取新的 Warp IP"></a>为什么需要反复刷新获取新的 Warp IP</h2><p>Warp 每隔一段时间会切换 IP，并且 Warp 每次连接获取到的 IP 不一定是本地的IP，并且很大一部分的 IP 被玩坏了（被 Netflix 拉黑）</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>自动检测当前的 IP 是否解锁 Netflix，若不解锁，重新请求一个新的 IP。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>首先要有一台亚太地区的 VPS，能够获取到 Warp 提供的香港（新加坡）的 IP，这里以一台 1 刀的阿里云香港轻量为例。<br><a href="https://github.com/sjlleo/netflix-verify">下载</a> 检测 Netflix 的工具，放（链接）到 <code>/root/nf</code><br>使用 <a href="https://p3terx.com/archives/cloudflare-warp-configuration-script.html">Warp 一键脚本</a>，确保正确开启 Warp<br>创建 <code>/root/nf.py</code>，填入下面的脚本，这里蹩脚的脚本只是抛砖引玉，您可以自行修改  </p><h3 id="脚本附注"><a href="#脚本附注" class="headerlink" title="脚本附注"></a>脚本附注</h3><p>这里以解锁港区为例，如果是新加坡，将脚本里的 HK 都改成 SG。<br>脚本创建一个 <code>/root/nf.lock</code> 为判断脚本是否仍在运行，要是中途结束运行了，自己手动删一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">is_lockexist = os.path.exists(<span class="string">&quot;/root/nf.lock&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> is_lockexist == <span class="literal">False</span>:</span><br><span class="line">    subprocess.getoutput(<span class="string">&quot;/usr/bin/touch /root/nf.lock&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ip_str = subprocess.getoutput(<span class="string">&quot;curl -4 ip.p3terx.com&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(ip_str)</span><br><span class="line">        <span class="keyword">if</span> ip_str.find(<span class="string">&quot;HK&quot;</span>) != -<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                nf_str = subprocess.getoutput(<span class="string">&#x27;/root/nf&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(nf_str)</span><br><span class="line">                <span class="keyword">if</span> nf_str.find(<span class="string">&quot;(HK)&quot;</span>) == -<span class="number">1</span>:</span><br><span class="line">                    <span class="comment">#nf_str = subprocess.getoutput(&#x27;/root/nf&#x27;)</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;failure&quot;</span>)</span><br><span class="line">                    subprocess.run([<span class="string">&#x27;/bin/systemctl&#x27;</span>,<span class="string">&#x27;restart&#x27;</span>,<span class="string">&#x27;wg-quick@wgcf&#x27;</span>])</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">                    subprocess.getoutput(<span class="string">&quot;/bin/rm /root/nf.lock&quot;</span>)</span><br><span class="line">                    sys.exit()</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            subprocess.run([<span class="string">&#x27;/bin/systemctl&#x27;</span>,<span class="string">&#x27;restart&#x27;</span>,<span class="string">&#x27;wg-quick@wgcf&#x27;</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;nf is already running&quot;</span>)</span><br></pre></td></tr></table></figure><p>使用 <code>crontab -e</code>，创建规则  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * * /usr/bin/python3 /root/nf.py</span><br></pre></td></tr></table></figure><p>至此，您的脚本应该能够顺利运行了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Netflix </tag>
            
            <tag> Python </tag>
            
            <tag> 脚本工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>父元素设置了 min-height ，子元素 height 100% 不生效</title>
      <link href="/2021/10/26/frontend-min-height/"/>
      <url>/2021/10/26/frontend-min-height/</url>
      
        <content type="html"><![CDATA[<h2 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h2><p>因为百分比是根据父元素的 <code>height</code> 来计算的，而不是 <code>min-height</code>。所以当父元素的 <code>height</code> 未被设置时，子元素是根据默认值 <code>auto</code> 来计算的，所以表现为根据内容自动设置高度。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在父元素使用 <code>flex</code> 或 <code>grid</code> 布局，此时子元素的 <code>align-self</code> 是 <code>stretch</code>，即 100%。  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">        Hello, World!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-self">align-self - CSS（层叠样式表）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/13/hello-world/"/>
      <url>/2021/10/13/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="你好，世界！"><a href="#你好，世界！" class="headerlink" title="你好，世界！"></a>你好，世界！</h2><p>兜兜转转来到 2021。和朴树《NEW BOY》中写的差不多，我的新生活来得像梦一样。<br>在此为以前所有的文章按下 DELETE 键，这里意味着我的新生。<br>现在的我状态 MAX，做着想做的事情，好像未来有无限的可能。虽然将来的规划还是比较模糊，但至少走在我应该走的路上，回到了正常生活中。<br>遗忘是人类的自我保护机制，我将以往抛诸脑后，以「Hello, World」为始，重新开始新的人生。<br>用中二的话讲，就是《RE：从零开始的大学生活》</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
